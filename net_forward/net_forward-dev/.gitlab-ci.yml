# This file is a template, and might need editing before it works on your project.
# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages
#
# You can copy and paste this template into a new `.gitlab-ci.yml` file.
# You should not add this template to an existing `.gitlab-ci.yml` file by using the `include:` keyword.
#
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml
#    - export
stages:          # List of stages for jobs, and their order of execution
  - init
  - build
  - exp
  - enhance
  - mistouch
  - spoof
  - quality
  - patch
  - spd
  - mask
  - cppcheck
  - log

clone-job:       # This job runs in the build stage, which runs first.
  stage: init
  tags:
    - net-forward
  script:
    - echo "零、初始化"
    - |
      echo "CI  编号  : $CI_BUILD_ID$"
      echo "当前路径   : ($pwd)"
      echo "项目路径   : $CI_BUILDS_DIR$"
      echo "项目地址   : $CI_PROJECT_URL$"
      echo "分支      : $CI_COMMIT_REF_NAME$"
      echo "更新描述   : $CI_COMMIT_MESSAGE$"
      echo "path_build: $PATH_BUILD_GITLAB$"
      echo "path_test : $PATH_TEST_GITLAB$"
      echo "CHAT_CHANNEL : $CHAT_CHANNEL$"
      echo "CHAT_INPUT : $CHAT_INPUT$"
      echo "CHAT_USER_ID : $CHAT_USER_ID$"
      echo "CI : $CI$"
      echo "CI_API_V4_URL : $CI_API_V4_URL$"
      echo "CI_API_GRAPHQL_URL : $CI_API_GRAPHQL_URL$"
      echo "CI_BUILDS_DIR : $CI_BUILDS_DIR$"
      echo "CI_COMMIT_AUTHOR : $CI_COMMIT_AUTHOR$"
      echo "CI_COMMIT_BEFORE_SHA : $CI_COMMIT_BEFORE_SHA$"
      echo "CI_COMMIT_BRANCH : $CI_COMMIT_BRANCH$"
      echo "CI_COMMIT_DESCRIPTION : $CI_COMMIT_DESCRIPTION$"
      echo "CI_COMMIT_MESSAGE : $CI_COMMIT_MESSAGE$"
      echo "CI_COMMIT_REF_NAME : $CI_COMMIT_REF_NAME$"
      echo "CI_COMMIT_REF_PROTECTED : $CI_COMMIT_REF_PROTECTED$"
      echo "CI_COMMIT_REF_SLUG : $CI_COMMIT_REF_SLUG$"
      echo "CI_COMMIT_SHA : $CI_COMMIT_SHA$"
      echo "CI_COMMIT_SHORT_SHA : $CI_COMMIT_SHORT_SHA$"
      echo "CI_COMMIT_TAG : $CI_COMMIT_TAG$"
      echo "CI_COMMIT_TAG_MESSAGE : $CI_COMMIT_TAG_MESSAGE$"
      echo "CI_COMMIT_TIMESTAMP : $CI_COMMIT_TIMESTAMP$"
      echo "CI_COMMIT_TITLE : $CI_COMMIT_TITLE$"
      echo "CI_CONCURRENT_ID : $CI_CONCURRENT_ID$"
      echo "CI_CONCURRENT_PROJECT_ID : $CI_CONCURRENT_PROJECT_ID$"
      echo "CI_CONFIG_PATH : $CI_CONFIG_PATH$"
      echo "CI_DEBUG_TRACE : $CI_DEBUG_TRACE$"
      echo "CI_DEBUG_SERVICES : $CI_DEBUG_SERVICES$"
      echo "CI_DEFAULT_BRANCH : $CI_DEFAULT_BRANCH$"
      echo "CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX : $CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX$"
      echo "CI_DEPENDENCY_PROXY_DIRECT_GROUP_IMAGE_PREFIX : $CI_DEPENDENCY_PROXY_DIRECT_GROUP_IMAGE_PREFIX$"
      echo "CI_DEPENDENCY_PROXY_PASSWORD : $CI_DEPENDENCY_PROXY_PASSWORD$"
      echo "CI_DEPENDENCY_PROXY_SERVER : $CI_DEPENDENCY_PROXY_SERVER$"
      echo "CI_DEPENDENCY_PROXY_USER : $CI_DEPENDENCY_PROXY_USER$"
      echo "CI_DEPLOY_FREEZE : $CI_DEPLOY_FREEZE$"
      echo "CI_DEPLOY_PASSWORD : $CI_DEPLOY_PASSWORD$"
      echo "CI_DEPLOY_USER : $CI_DEPLOY_USER$"
      echo "CI_DISPOSABLE_ENVIRONMENT : $CI_DISPOSABLE_ENVIRONMENT$"
      echo "CI_ENVIRONMENT_NAME : $CI_ENVIRONMENT_NAME$"
      echo "CI_ENVIRONMENT_SLUG : $CI_ENVIRONMENT_SLUG$"
      echo "CI_ENVIRONMENT_URL : $CI_ENVIRONMENT_URL$"
      echo "CI_ENVIRONMENT_ACTION : $CI_ENVIRONMENT_ACTION$"
      echo "CI_ENVIRONMENT_TIER : $CI_ENVIRONMENT_TIER$"
      echo "CI_RELEASE_DESCRIPTION : $CI_RELEASE_DESCRIPTION$"
      echo "CI_GITLAB_FIPS_MODE : $CI_GITLAB_FIPS_MODE$"
      echo "CI_HAS_OPEN_REQUIREMENTS : $CI_HAS_OPEN_REQUIREMENTS$"
      echo "CI_JOB_ID : $CI_JOB_ID$"
      echo "CI_JOB_IMAGE : $CI_JOB_IMAGE$"
      echo "CI_JOB_JWT : $CI_JOB_JWT$"
      echo "CI_JOB_JWT_V1 : $CI_JOB_JWT_V1$"
      echo "CI_JOB_JWT_V2 : $CI_JOB_JWT_V2$"
      echo "CI_JOB_MANUAL : $CI_JOB_MANUAL$"
      echo "CI_JOB_NAME : $CI_JOB_NAME$"
      echo "CI_JOB_NAME_SLUG : $CI_JOB_NAME_SLUG$"
      echo "CI_JOB_STAGE : $CI_JOB_STAGE$"
      echo "CI_JOB_STATUS : $CI_JOB_STATUS$"
      echo "CI_JOB_TIMEOUT : $CI_JOB_TIMEOUT$"
      echo "CI_JOB_TOKEN : $CI_JOB_TOKEN$"
      echo "CI_JOB_URL : $CI_JOB_URL$"
      echo "CI_JOB_STARTED_AT : $CI_JOB_STARTED_AT$"
      echo "CI_KUBERNETES_ACTIVE : $CI_KUBERNETES_ACTIVE$"
      echo "CI_NODE_INDEX : $CI_NODE_INDEX$"
      echo "CI_NODE_TOTAL : $CI_NODE_TOTAL$"
      echo "CI_OPEN_MERGE_REQUESTS : $CI_OPEN_MERGE_REQUESTS$"
      echo "CI_PAGES_DOMAIN : $CI_PAGES_DOMAIN$"
      echo "CI_PAGES_URL : $CI_PAGES_URL$"
      echo "CI_PIPELINE_ID : $CI_PIPELINE_ID$"
      echo "CI_PIPELINE_IID : $CI_PIPELINE_IID$"
      echo "CI_PIPELINE_SOURCE : $CI_PIPELINE_SOURCE$"
      echo "CI_PIPELINE_TRIGGERED : $CI_PIPELINE_TRIGGERED$"
      echo "CI_PIPELINE_URL : $CI_PIPELINE_URL$"
      echo "CI_PIPELINE_CREATED_AT : $CI_PIPELINE_CREATED_AT$"
      echo "CI_PIPELINE_NAME : $CI_PIPELINE_NAME$"
      echo "CI_PROJECT_DIR : $CI_PROJECT_DIR$"
      echo "CI_PROJECT_ID : $CI_PROJECT_ID$"
      echo "CI_PROJECT_NAME : $CI_PROJECT_NAME$"
      echo "CI_PROJECT_NAMESPACE : $CI_PROJECT_NAMESPACE$"
      echo "CI_PROJECT_NAMESPACE_ID : $CI_PROJECT_NAMESPACE_ID$"
      echo "CI_PROJECT_PATH_SLUG : $CI_PROJECT_PATH_SLUG$"
      echo "CI_PROJECT_PATH : $CI_PROJECT_PATH$"
      echo "CI_PROJECT_REPOSITORY_LANGUAGES : $CI_PROJECT_REPOSITORY_LANGUAGES$"
      echo "CI_PROJECT_ROOT_NAMESPACE : $CI_PROJECT_ROOT_NAMESPACE$"
      echo "CI_PROJECT_TITLE : $CI_PROJECT_TITLE$"
      echo "CI_PROJECT_DESCRIPTION : $CI_PROJECT_DESCRIPTION$"
      echo "CI_PROJECT_URL : $CI_PROJECT_URL$"
      echo "CI_PROJECT_VISIBILITY : $CI_PROJECT_VISIBILITY$"
      echo "CI_PROJECT_CLASSIFICATION_LABEL : $CI_PROJECT_CLASSIFICATION_LABEL$"
      echo "CI_REGISTRY_IMAGE : $CI_REGISTRY_IMAGE$"
      echo "CI_REGISTRY_PASSWORD : $CI_REGISTRY_PASSWORD$"
      echo "CI_REGISTRY_USER : $CI_REGISTRY_USER$"
      echo "CI_REGISTRY : $CI_REGISTRY$"
      echo "CI_REPOSITORY_URL : $CI_REPOSITORY_URL$"
      echo "CI_RUNNER_DESCRIPTION : $CI_RUNNER_DESCRIPTION$"
      echo "CI_RUNNER_EXECUTABLE_ARCH : $CI_RUNNER_EXECUTABLE_ARCH$"
      echo "CI_RUNNER_ID : $CI_RUNNER_ID$"
      echo "CI_RUNNER_REVISION : $CI_RUNNER_REVISION$"
      echo "CI_RUNNER_SHORT_TOKEN : $CI_RUNNER_SHORT_TOKEN$"
      echo "CI_RUNNER_TAGS : $CI_RUNNER_TAGS$"
      echo "CI_RUNNER_VERSION : $CI_RUNNER_VERSION$"
      echo "CI_SERVER_HOST : $CI_SERVER_HOST$"
      echo "CI_SERVER_NAME : $CI_SERVER_NAME$"
      echo "CI_SERVER_PORT : $CI_SERVER_PORT$"
      echo "CI_SERVER_PROTOCOL : $CI_SERVER_PROTOCOL$"
      echo "CI_SERVER_SHELL_SSH_HOST : $CI_SERVER_SHELL_SSH_HOST$"
      echo "CI_SERVER_SHELL_SSH_PORT : $CI_SERVER_SHELL_SSH_PORT$"
      echo "CI_SERVER_REVISION : $CI_SERVER_REVISION$"
      echo "CI_SERVER_TLS_CA_FILE : $CI_SERVER_TLS_CA_FILE$"
      echo "CI_SERVER_TLS_CERT_FILE : $CI_SERVER_TLS_CERT_FILE$"
      echo "CI_SERVER_TLS_KEY_FILE : $CI_SERVER_TLS_KEY_FILE$"
      echo "CI_SERVER_URL : $CI_SERVER_URL$"
      echo "CI_SERVER_VERSION_MAJOR : $CI_SERVER_VERSION_MAJOR$"
      echo "CI_SERVER_VERSION_MINOR : $CI_SERVER_VERSION_MINOR$"
      echo "CI_SERVER_VERSION_PATCH : $CI_SERVER_VERSION_PATCH$"
      echo "CI_SERVER_VERSION : $CI_SERVER_VERSION$"
      echo "CI_SERVER : $CI_SERVER$"
      echo "CI_SHARED_ENVIRONMENT : $CI_SHARED_ENVIRONMENT$"
      echo "CI_TEMPLATE_REGISTRY_HOST : $CI_TEMPLATE_REGISTRY_HOST$"
      echo "GITLAB_CI : $GITLAB_CI$"
      echo "GITLAB_FEATURES : $GITLAB_FEATURES$"
      echo "GITLAB_USER_EMAIL : $GITLAB_USER_EMAIL$"
      echo "GITLAB_USER_ID : $GITLAB_USER_ID$"
      echo "GITLAB_USER_LOGIN : $GITLAB_USER_LOGIN$"
      echo "GITLAB_USER_NAME : $GITLAB_USER_NAME$"
      echo "KUBECONFIG : $KUBECONFIG$"
      echo "TRIGGER_PAYLOAD : $TRIGGER_PAYLOAD$"
      echo "CI_MERGE_REQUEST_APPROVED : $CI_MERGE_REQUEST_APPROVED$"
      echo "CI_MERGE_REQUEST_ASSIGNEES : $CI_MERGE_REQUEST_ASSIGNEES$"
      echo "CI_MERGE_REQUEST_ID : $CI_MERGE_REQUEST_ID$"
      echo "CI_MERGE_REQUEST_IID : $CI_MERGE_REQUEST_IID$"
      echo "CI_MERGE_REQUEST_LABELS : $CI_MERGE_REQUEST_LABELS$"
      echo "CI_MERGE_REQUEST_MILESTONE : $CI_MERGE_REQUEST_MILESTONE$"
      echo "CI_MERGE_REQUEST_PROJECT_ID : $CI_MERGE_REQUEST_PROJECT_ID$"
      echo "CI_MERGE_REQUEST_PROJECT_PATH : $CI_MERGE_REQUEST_PROJECT_PATH$"
      echo "CI_MERGE_REQUEST_PROJECT_URL : $CI_MERGE_REQUEST_PROJECT_URL$"
      echo "CI_MERGE_REQUEST_REF_PATH : $CI_MERGE_REQUEST_REF_PATH$"
      echo "CI_MERGE_REQUEST_SQUASH_ON_MERGE : $CI_MERGE_REQUEST_SQUASH_ON_MERGE$"
      echo "CI_MERGE_REQUEST_SOURCE_BRANCH_NAME : $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME$"
      echo "CI_MERGE_REQUEST_SOURCE_BRANCH_PROTECTED : $CI_MERGE_REQUEST_SOURCE_BRANCH_PROTECTED$"
      echo "CI_MERGE_REQUEST_SOURCE_BRANCH_SHA : $CI_MERGE_REQUEST_SOURCE_BRANCH_SHA$"
      echo "CI_MERGE_REQUEST_SOURCE_PROJECT_ID : $CI_MERGE_REQUEST_SOURCE_PROJECT_ID$"
      echo "CI_MERGE_REQUEST_SOURCE_PROJECT_PATH : $CI_MERGE_REQUEST_SOURCE_PROJECT_PATH$"
      echo "CI_MERGE_REQUEST_SOURCE_PROJECT_URL : $CI_MERGE_REQUEST_SOURCE_PROJECT_URL$"
      echo "CI_MERGE_REQUEST_TARGET_BRANCH_NAME : $CI_MERGE_REQUEST_TARGET_BRANCH_NAME$"
      echo "CI_MERGE_REQUEST_TARGET_BRANCH_PROTECTED : $CI_MERGE_REQUEST_TARGET_BRANCH_PROTECTED$"
      echo "CI_MERGE_REQUEST_TARGET_BRANCH_SHA : $CI_MERGE_REQUEST_TARGET_BRANCH_SHA$"
      echo "CI_MERGE_REQUEST_TITLE : $CI_MERGE_REQUEST_TITLE$"
      echo "CI_MERGE_REQUEST_EVENT_TYPE : $CI_MERGE_REQUEST_EVENT_TYPE$"
      echo "CI_MERGE_REQUEST_DIFF_ID : $CI_MERGE_REQUEST_DIFF_ID$"
      echo "CI_MERGE_REQUEST_DIFF_BASE_SHA : $CI_MERGE_REQUEST_DIFF_BASE_SHA$"
      echo "CI_EXTERNAL_PULL_REQUEST_IID : $CI_EXTERNAL_PULL_REQUEST_IID$"
      echo "CI_EXTERNAL_PULL_REQUEST_SOURCE_REPOSITORY : $CI_EXTERNAL_PULL_REQUEST_SOURCE_REPOSITORY$"
      echo "CI_EXTERNAL_PULL_REQUEST_TARGET_REPOSITORY : $CI_EXTERNAL_PULL_REQUEST_TARGET_REPOSITORY$"
      echo "CI_EXTERNAL_PULL_REQUEST_SOURCE_BRANCH_NAME : $CI_EXTERNAL_PULL_REQUEST_SOURCE_BRANCH_NAME$"
      echo "CI_EXTERNAL_PULL_REQUEST_SOURCE_BRANCH_SHA : $CI_EXTERNAL_PULL_REQUEST_SOURCE_BRANCH_SHA$"
      echo "CI_EXTERNAL_PULL_REQUEST_TARGET_BRANCH_NAME : $CI_EXTERNAL_PULL_REQUEST_TARGET_BRANCH_NAME$"
      echo "CI_EXTERNAL_PULL_REQUEST_TARGET_BRANCH_SHA : $CI_EXTERNAL_PULL_REQUEST_TARGET_BRANCH_SHA$"
    - cp -r /home/gitlab-runner/builds/nHsteume/0/silead-algo-dl/net_forward/* /var/lib/jenkins/gitlab-runner/tool/aosp/vendor/net_forward

6192-build:
  stage: build
  needs: ["clone-job"]
  tags:
    - net-forward
  artifacts:
    paths:
      -  $PATH_BUILD_GITLAB/gitlab_artifact
  script:
    - |
      pwd
      git remote -v
      git branch -a
      git log --oneline
    - cd $PATH_BUILD_GITLAB
    - pwd
    - echo "开始构建NET_FORWARD BUILD  ENTER："
    - rm -rf output
    - rm -rf output_object
    - ./gitlab.sh net 6192

6193-build:
  stage: build
  needs: ["clone-job"]
  tags:
    - net-forward
  artifacts:
    paths:
      -  $PATH_BUILD_GITLAB/gitlab_artifact
  script:
    - |
      pwd
      git remote -v
      git branch -a
      git log --oneline
    - cd $PATH_BUILD_GITLAB
    - echo "开始构建NET_FORWARD BUILD  ENTER："
    - rm -rf output
    - rm -rf output_object
    - ./gitlab.sh net 6193


6195-build:
  stage: build
  needs: ["clone-job"]
  tags:
    - net-forward
  artifacts:
    paths:
      -  $PATH_BUILD_GITLAB/gitlab_artifact
  script:
    - |
      pwd
      git remote -v
      git branch -a
      git log --oneline
    - cd $PATH_BUILD_GITLAB
    - echo "开始构建NET_FORWARD BUILD  ENTER："
    - rm -rf output
    - rm -rf output_object
    - ./gitlab.sh net 6195




6192-spoof:
  stage: spoof
  needs: ["6192-build"]
  tags:
    - net-forward
  allow_failure: true
  script:
    - echo "四、测试： 防伪"
    - cd $PATH_TEST_GITLAB
    - cmake ./ -Dchip=6192 -Dmod=spoof
    - make
    - ./main_test

6192-mistouch:
  stage: mistouch
  needs: ["6192-build"]
  tags:
    - net-forward
  allow_failure: true
  script:
    - echo "五、测试： 误触"
    - cd $PATH_TEST_GITLAB
    - cmake ./ -Dchip=6192 -Dmod=mistouch
    - make
    - ./main_test

6192-spd:
  stage: spd
  needs: ["6192-build"]
  tags:
    - net-forward
  allow_failure: true
  script:
    - echo "六、测试： 异物"
    - cd $PATH_TEST_GITLAB
    - cmake ./ -Dchip=6192 -Dmod=spd
    - make
    - ./main_test

6192-quality:
  stage: quality
  needs: ["6192-build"]
  tags:
    - net-forward
  allow_failure: true
  script:
    - echo "七、测试： 质量"
    - cd $PATH_TEST_GITLAB
    - cmake ./ -Dchip=6192 -Dmod=quality
    - make
    - ./main_test


6192-patch:
  stage: patch
  needs: ["6192-build"]
  tags:
    - net-forward
  allow_failure: true
  script:
    - echo "九、测试： 描述子"
    - cd $PATH_TEST_GITLAB
    - cmake ./ -Dchip=6192 -Dmod=patch
    - make
    - ./main_test



6193-exp:
  stage: exp
  needs: ["6193-build"]
  tags:
    - net-forward
  allow_failure: true
  script:
    - echo "二、测试： 扩边"
    - cd $PATH_TEST_GITLAB
    - cmake ./ -Dchip=6193 -Dmod=exp
    - make
    - ./main_test

6193-enhance:
  stage: enhance
  needs: ["6193-build"]
  tags:
    - net-forward
  allow_failure: true
  script:
    - echo "三、测试： 增强"
    - cd $PATH_TEST_GITLAB
    - cmake ./ -Dchip=6193 -Dmod=enhance
    - make
    - ./main_test

6193-spoof:
  stage: spoof
  needs: ["6193-build"]
  tags:
    - net-forward
  allow_failure: true
  script:
    - echo "四、测试： 防伪"
    - cd $PATH_TEST_GITLAB
    - cmake ./ -Dchip=6193 -Dmod=spoof
    - make
    - ./main_test

6193-mistouch:
  stage: mistouch
  needs: ["6193-build"]
  tags:
    - net-forward
  allow_failure: true
  script:
    - echo "五、测试： 误触"
    - cd $PATH_TEST_GITLAB
    - cmake ./ -Dchip=6193 -Dmod=mistouch
    - make
    - ./main_test

6193-spd:
  stage: spd
  needs: ["6193-build"]
  tags:
    - net-forward
  allow_failure: true
  script:
    - echo "六、测试： 异物"
    - cd $PATH_TEST_GITLAB
    - cmake ./ -Dchip=6193 -Dmod=spd
    - make
    - ./main_test

6193-quality:
  stage: quality
  needs: ["6193-build"]
  tags:
    - net-forward
  allow_failure: true
  script:
    - echo "七、测试： 质量"
    - cd $PATH_TEST_GITLAB
    - cmake ./ -Dchip=6193 -Dmod=quality
    - make
    - ./main_test

6193-mask:
  stage: mask
  needs: ["6193-build"]
  tags:
    - net-forward
  allow_failure: true
  script:
    - echo "八、测试： mask"
    - cd $PATH_TEST_GITLAB
    - cmake ./ -Dchip=6193 -Dmod=mask
    - make
    - ./main_test

6193-patch:
  stage: patch
  needs: ["6193-build"]
  tags:
    - net-forward
  allow_failure: true
  script:
    - echo "九、测试： 描述子"
    - cd $PATH_TEST_GITLAB
    - cmake ./ -Dchip=6193 -Dmod=patch
    - make
    - ./main_test


6195-spoof:
  stage: spoof
  needs: ["6195-build"]
  tags:
    - net-forward
  allow_failure: true
  script:
    - echo "四、测试： 防伪"
    - cd $PATH_TEST_GITLAB
    - cmake ./ -Dchip=6195 -Dmod=spoof
    - make
    - ./main_test
